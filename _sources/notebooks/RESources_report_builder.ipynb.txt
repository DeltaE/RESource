{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1af8e9fa",
   "metadata": {
    "vscode": {
     "languageId": "html"
    }
   },
   "outputs": [],
   "source": [
    "from jinja2 import Environment, FileSystemLoader\n",
    "import markdown2\n",
    "import base64\n",
    "from pathlib import Path"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "vscode": {
     "languageId": "html"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "HTML report saved to: output/report.html\n"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "# Base64 image embedding\n",
    "def embed_image_base64(image_path):\n",
    "    img_path = Path(image_path)\n",
    "    if not img_path.exists():\n",
    "        return \"\"\n",
    "    mime = \"image/png\" if img_path.suffix.lower() == \".png\" else \"image/jpeg\"\n",
    "    with open(img_path, \"rb\") as img_file:\n",
    "        encoded = base64.b64encode(img_file.read()).decode(\"utf-8\")\n",
    "    return f\"data:{mime};base64,{encoded}\"\n",
    "\n",
    "# Sample data\n",
    "figures = [\n",
    "    {\n",
    "        \"title\": \"Solar Output\",\n",
    "        \"filename\": \"fig1.png\",\n",
    "        \"image_data\": embed_image_base64(\"fig1.png\"),\n",
    "        \"explanation\": \"Shows daily solar generation.\"\n",
    "    },\n",
    "    {\n",
    "        \"title\": \"Wind Potential\",\n",
    "        \"filename\": \"fig2.png\",\n",
    "        \"image_data\": embed_image_base64(\"fig2.png\"),\n",
    "        \"explanation\": \"Wind speeds over terrain.\"\n",
    "    }\n",
    "]\n",
    "\n",
    "data = {\n",
    "    \"title\": \"Energy System Analysis Report\",\n",
    "    \"intro\": \"This report summarizes visual outputs and findings from the model results.\",\n",
    "    \"figures\": figures\n",
    "}\n",
    "\n",
    "# Load and render template\n",
    "env = Environment(loader=FileSystemLoader(\"templates\"))\n",
    "template = env.get_template(\"report_template.md\")\n",
    "rendered_md = template.render(data)\n",
    "\n",
    "# Convert to HTML\n",
    "rendered_html = markdown2.markdown(rendered_md, extras=[\"fenced-code-blocks\"])\n",
    "\n",
    "# Save HTML file\n",
    "output_dir = Path(\"output\")\n",
    "output_dir.mkdir(exist_ok=True)\n",
    "output_html = output_dir / \"report.html\"\n",
    "output_html.write_text(rendered_html, encoding=\"utf-8\")\n",
    "\n",
    "print(f\"HTML report saved to: {output_html}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "vscode": {
     "languageId": "html"
    }
   },
   "outputs": [],
   "source": [
    "# Step 1: Render markdown with Jinja2\n",
    "env = Environment(loader=FileSystemLoader(\"templates\"))\n",
    "template = env.get_template(\"report_template.md\")\n",
    "rendered_md = template.render(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "vscode": {
     "languageId": "html"
    }
   },
   "outputs": [],
   "source": [
    "# Step 2: Convert Markdown to HTML\n",
    "rendered_html = markdown2.markdown(rendered_md)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "vscode": {
     "languageId": "html"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "HTML report saved to: reports/report.html\n"
     ]
    }
   ],
   "source": [
    "# Step 3: Save HTML file\n",
    "output_dir = Path(\"reports\")\n",
    "output_dir.mkdir(exist_ok=True)\n",
    "output_html = output_dir / \"report.html\"\n",
    "output_html.write_text(rendered_html, encoding=\"utf-8\")\n",
    "\n",
    "print(f\"HTML report saved to: {output_html}\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "RES",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
